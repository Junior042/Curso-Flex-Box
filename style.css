*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container{
  background-color: #ccc;
  height: 200px;
  display: flex;
  flex-direction: row;/*ao add display flex, fica automaticamente com o flex-direction: row;*/
  /*flex-direction contem os seguintes valores: column | row-reverse | column-reverse | row*/

/*<--------------------------><---------------------------><-----------------------------------><--------------------------->*/

  flex-wrap: nowrap;/*define se os items teram quebra de liha ou Não*/ /*o valor padrão dele vem como o "nowrap"*/
  /*flex-wrap contem os seguintes valores: wrap | wrap-rever*/

/*<--------------------------><---------------------------><-----------------------------------><--------------------------->*/

  flex-flow: row nowrap;/*é uma forma resumida de usar o felx-direction e o flex-wrap, podendo usar os valores de ambos ao mesmo tempo*/

/*<--------------------------><---------------------------><-----------------------------------><--------------------------->*/

  justify-content: flex-start;/*serve para fazer alinhamentos horizontais, seu valor padrão é o flex-start*/
  /*justify-content contem os seguintes valores: flex-end | center | apace-between | space-around*/

  /*space-around é um valor que deixa os items alinhados ao centro só que com os mesmo espaçamento entre eles só que ele cria os espaços iguais inclusive nas estremidades*/
  
  /*space-between é um valor que deixa os items alinhados ao centro só que com os mesmo espaçamento entre eles para melhor aproveitamento do espaço do container*/

/*<--------------------------><---------------------------><-----------------------------------><--------------------------->*/

  align-items: stretch;/*responsavel pelo alinhamento vertical o align-items tem seu valor padrão é stretch ele define que os itens cresção igualmente*/

  /*align-items contem os seguintes valores: flex-start | flex-end | center | baseline*/

  /*valor baseline ele faz um alinhamento vetical basedo no conteudo*/

/*<--------------------------><---------------------------><-----------------------------------><--------------------------->*/

  align-content: stretch;/*faz alinhamento vertical só que os itens tem que estarem com quebra de linha, seu valor padrão é o stretch*/
  /*align-items contem os seguintes valores: flex-start | flex-end | center | baseline*/

}

/*<---------------><---------------><---------------><---------------><---------------><---------------><--------------->*/
/*Aula 2*/

/*Propriedade Order: ; Serve basicamente para alterar a ordem dos items ou containers*/

/*<---------------><---------------><---------------><---------------><---------------><---------------><--------------->*/
/*O align-self: ; serve para alinhar só que tem um problema se o flex-direction: ; estiver com o valor (row) o align-self irá alinhar verticalmente caso o flex-direction esteja com o valor column o align-self  alinhará horizontalmente*/
/*o align-self tem os seguintes valores: flex-start | flex-end | center | baseline | stretch */

/*flex-grow: ; serve meio que para definir o tamanho dele */

/*flex-basis: ; serve para definir a largura inicial do item ou container*/

/*flex-sharink: ;  serve para que  o item diminua o tanto de vezes referente ao outro item.*/

/*flex: ; é a forma resumida de escrever as propriedades: flex-grow - flex-basis - flex-sharink ;*/

.item{
  background: #333;
  color: #fff;
  padding: 20px;
  margin: 5px;
}